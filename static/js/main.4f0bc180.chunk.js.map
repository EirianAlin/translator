{"version":3,"sources":["components/field.js","components/languages.js","components/translate.js","App.js","index.js"],"names":["field","_ref","label","value","onChange","react_default","a","createElement","className","e","target","LANGUAGES","Languages","language","onLanguageChange","undefined","languageConfig","find","l","Error","concat","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","onClick","map","_ref2","key","Math","random","href","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","doTranslation","asyncToGenerator","_callee","input","languageCode","cancelToken","_yield$axios$post","data","_context","axios","post","q","token","translations","translatedText","t0","_x","_x2","_x3","apply","arguments","translate","text","translated","setTranslated","useEffect","CancelToken","source","cancel","App","setLanguage","_useState3","_useState4","setText","languages","render","document","querySelector"],"mappings":"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","file":"static/js/main.4f0bc180.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default ({ label, value, onChange }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input\n        className=\"input\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","/* eslint-disable */\nimport React, { useState } from \"react\";\n\nconst LANGUAGES = [\n  { label: \"Afrikaans\", value: \"af\" },\n  { label: \"Arabic\", value: \"ar\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Hindi\", value: \"hi\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"English\", value: \"en\" },\n  { label: \"Simplified Chinese\", value: \"zh-CN\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Swahili\", value: \"sw\" },\n  { label: \"Thai\", value: \"th\" }\n];\n\nconst Languages = ({ language, onLanguageChange }) => {\n  if (language === undefined) {\n    language = \"en\";\n  }\n  const languageConfig = LANGUAGES.find((l) => l.value === language);\n  if (!languageConfig) {\n    throw new Error(`Unknown language code '${language}'`);\n  }\n\n  const [open, setOpen] = useState(false);\n\n  const onSelect = (language) => {\n    setOpen(false);\n    onLanguageChange(language);\n  };\n\n  return (\n    <div>\n      <label className=\"label\">Введите язык</label>\n      <div className={`dropdown ${open && \"is-active\"}`}>\n        <div className=\"dropdown-trigger\">\n          <button className=\"button\" onClick={() => setOpen(!open)}>\n            <span>{languageConfig.label}</span>\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-angle-down\" />\n            </span>\n          </button>\n        </div>\n        <div className=\"dropdown-menu\">\n          <div className=\"dropdown-content\">\n            {LANGUAGES.map(({ label, value }) => {\n              return (\n                <a\n                  key={Math.random()}\n                  href=\"#\"\n                  onClick={() => onSelect(value)}\n                  className=\"dropdown-item\"\n                >\n                  {label}\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Languages;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst doTranslation = async (input, languageCode, cancelToken) => {\n  try {\n    const { data } = await axios.post(\n      \"https://translation.googleapis.com/language/translate/v2?key=AIzaSyAL5RRDp5_zEW6KwhRmODHn-LWAAj8plnM\",\n      {\n        q: input,\n        target: languageCode\n      },\n      { cancelToken: cancelToken.token }\n    );\n\n    return data.data.translations[0].translatedText;\n  } catch (err) {\n    return \"\";\n  }\n};\n\nexport default ({ language, text }) => {\n  const [translated, setTranslated] = useState(\"\");\n\n  useEffect(() => {\n    if (!text) {\n      return;\n    }\n\n    const cancelToken = axios.CancelToken.source();\n\n    doTranslation(text, language, cancelToken).then(setTranslated);\n\n    return () => {\n      try {\n        cancelToken.cancel();\n      } catch (err) {}\n    };\n  }, [text, language]);\n\n  return (\n    <div>\n      <label className=\"label\">Output</label>\n      <h1 className=\"title\">{translated}</h1>\n    </div>\n  );\n};\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport Field from \"./components/field\";\nimport Languages from \"./components/languages\";\nimport Translate from \"./components/translate\";\n\nexport default function App() {\n  const [language, setLanguage] = useState(\"en\");\n  const [text, setText] = useState(\"Реакция\");\n\n  return (\n    <div>\n      <Field label=\"Введите русские слова\" onChange={setText} value={text} />\n      <Languages language={language} onLanguageChange={setLanguage} />\n      <hr />\n      <Translate text={text} language={language} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}